module MonadIO.Flock
  ( HasNamedFileLock( flName, fileLock, shex ), NamedFileLock
  , flock, flockNB, unflock )
where

-- base --------------------------------

import Data.Function  ( ($) )

-- data-textual ------------------------

import Data.Textual  ( Printable, toText )

-- filelock ----------------------------

import System.FileLock  ( FileLock, SharedExclusive
                        , lockFile, tryLockFile, unlockFile )

-- fpath -------------------------------

import FPath.AsFilePath  ( AsFilePath( filepath ) )
import FPath.File        ( FileAs )

-- lens --------------------------------

import Control.Lens.Lens  ( Lens', lens )

-- more-unicode ------------------------

import Data.MoreUnicode.Functor  ( (‚ä≥), (‚ä≥‚ä≥) )
import Data.MoreUnicode.Lens     ( (‚ä£), (‚´•))
import Data.MoreUnicode.Maybe    ( ùïÑ )
import Data.MoreUnicode.Text     ( ùïã )

------------------------------------------------------------
--                     local imports                      --
------------------------------------------------------------

import MonadIO  ( MonadIO, liftIO )

--------------------------------------------------------------------------------

data NamedFileLock = NamedFileLock { _flName   ‚à∑ ùïã
                                   , _shex     ‚à∑ SharedExclusive
                                   , _fileLock ‚à∑ FileLock
                                   }

class HasNamedFileLock Œ± where
  flName   ‚à∑ Lens' Œ± ùïã
  fileLock ‚à∑ Lens' Œ± FileLock
  shex     ‚à∑ Lens' Œ± SharedExclusive

instance HasNamedFileLock NamedFileLock where
  flName   = lens _flName   (\ nfl fn ‚Üí nfl { _flName   = fn })
  fileLock = lens _fileLock (\ nfl fl ‚Üí nfl { _fileLock = fl })
  shex     = lens _shex     (\ nfl sx ‚Üí nfl { _shex     = sx })

-----------------------------------------------------------

flock ‚à∑ (MonadIO Œº, FileAs Œ≥, AsFilePath Œ≥, Printable Œ≥) ‚áí
        SharedExclusive ‚Üí Œ≥ ‚Üí Œº NamedFileLock
flock mode fn = liftIO $
  NamedFileLock (toText fn) mode ‚ä≥ lockFile (fn ‚´• filepath) mode

flockNB ‚à∑ (MonadIO Œº, FileAs Œ≥, AsFilePath Œ≥, Printable Œ≥) ‚áí
          SharedExclusive ‚Üí Œ≥ ‚Üí Œº (ùïÑ NamedFileLock)
flockNB mode fn = liftIO $
  NamedFileLock (toText fn) mode ‚ä≥‚ä≥ tryLockFile (fn ‚´• filepath) mode

unflock ‚à∑ MonadIO Œº ‚áí NamedFileLock ‚Üí Œº ()
unflock l = liftIO $ unlockFile (l ‚ä£ fileLock)


-- that's all, folks! ----------------------------------------------------------
