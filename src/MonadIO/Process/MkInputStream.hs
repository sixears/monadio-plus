{-# LANGUAGE UndecidableInstances #-} -- required for FileAs ‚áí MkInputStream

module MonadIO.Process.MkInputStream
  ( MkInputStream( mkIStream ) )
where

import Base1T

-- base --------------------------------

import System.IO  ( Handle )

-- bytestring --------------------------

import Data.ByteString  ( ByteString )

-- fpath -------------------------------

import FPath.Error.FPathError  ( AsFPathError )
import FPath.File              ( FileAs )

-- lens --------------------------------

import Control.Lens.Getter  ( view )

-- monadio-plus ------------------------

import MonadIO.Temp  ( tempfile )

-- process -----------------------------

import System.Process  ( StdStream( UseHandle ) )

------------------------------------------------------------
--                     local imports                      --
------------------------------------------------------------

import MonadIO.NamedHandle  ( HEncoding( NoEncoding ), ‚Ñç, handle )
import MonadIO.OpenFile     ( FileOpenMode( FileR ), openFile )

--------------------------------------------------------------------------------

type ùîπùïä = ByteString

class MkInputStream Œ± where
  mkIStream ‚à∑ ‚àÄ Œµ Œº .
              (MonadIO Œº,
               AsIOError Œµ, AsFPathError Œµ, MonadError Œµ Œº, HasCallStack) ‚áí
              Œ± ‚Üí Œº StdStream

instance MkInputStream StdStream where
  mkIStream s = return s

instance MkInputStream ùïã where
  mkIStream t = UseHandle ‚ä≥ tempfile t

instance MkInputStream ùîπùïä where
  mkIStream b = UseHandle ‚ä≥ tempfile b

instance MkInputStream Handle where
  mkIStream h = return $ UseHandle h

instance MkInputStream ‚Ñç where
  mkIStream h = return $ UseHandle (h ‚ä£ handle)

instance {-# OVERLAPPABLE #-} FileAs Œ≥ ‚áí MkInputStream Œ≥ where
  mkIStream fn = UseHandle ‚àò view handle ‚ä≥ openFile NoEncoding FileR fn

-- !!! If adding new instances here, consider adding them to !!!
-- !!! MockIO.Process.MLMakeIStream in mockio-plus too       !!!

-- that's all, folks! ----------------------------------------------------------
