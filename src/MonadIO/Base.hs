{-# LANGUAGE RankNTypes    #-}
{-# LANGUAGE UnicodeSyntax #-}
{-# LANGUAGE ViewPatterns  #-}

module MonadIO.Base
  ( chmod, getArgs, hClose, unlink )
where

import Base1T

-- base --------------------------------

import qualified System.Environment
import qualified System.IO

import System.IO           ( Handle )
import System.Posix.Types  ( FileMode )

-- fpath -------------------------------

import FPath.AsFilePath  ( AsFilePath, filepath )
import FPath.File        ( FileAs( _File_ ) )

-- unix --------------------------------

import System.Posix.Files  ( removeLink, setFileMode )

--------------------------------------------------------------------------------

hClose ‚à∑ ‚àÄ Œµ Œº .
         (AsIOError Œµ, MonadError Œµ Œº, HasCallStack, MonadIO Œº) ‚áí Handle ‚Üí Œº ()
hClose = asIOError ‚àò System.IO.hClose

----------------------------------------

chmod ‚à∑ ‚àÄ Œµ œÅ Œº .
        (MonadIO Œº, AsIOError Œµ, MonadError Œµ Œº, HasCallStack, AsFilePath œÅ) ‚áí
        FileMode ‚Üí œÅ ‚Üí Œº ()
chmod perms fn = asIOError $ setFileMode (fn ‚´• filepath) perms

----------------------------------------

unlink ‚à∑ ‚àÄ Œµ Œ≥ Œº .
         (MonadIO Œº, AsIOError Œµ, MonadError Œµ Œº, HasCallStack, FileAs Œ≥) ‚áí
         Œ≥ ‚Üí Œº ()
unlink (review _File_ ‚Üí fn) = asIOError $ removeLink (fn ‚´• filepath)

----------------------------------------

getArgs ‚à∑ MonadIO Œº ‚áí Œº [ùïä]
getArgs = liftIO System.Environment.getArgs

-- that's all, folks! ----------------------------------------------------------
